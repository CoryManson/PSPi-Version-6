name: Build Drivers
description: 'Build PSPi drivers'
inputs:
  build:
    description: 'Comma seperated list of images to build'
    required: true
  createRelease:
    description: 'Create a release'
    default: 'false'

runs:
  using: "composite"
  steps:   
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install fdisk gdisk qemu-user-static libarchive-tools tar parted qemu-utils
      shell: bash

    - name: Install packer-builder-arm
      run: |
        mkdir -p $GITHUB_WORKSPACE/packer/plugins
        cd $GITHUB_WORKSPACE/packer/plugins
        git clone https://github.com/mkaczanowski/packer-builder-arm
        cd packer-builder-arm
        go mod download
        go build -v .
      shell: bash

    # - name: Empty driver bin folder
    #   run: |
    #     rm -rf $GITHUB_WORKSPACE/rpi/drivers/bin/*
    #     ls $GITHUB_WORKSPACE/rpi/drivers/bin/
    #   shell: bash

    - name: Build driver image
      run: |
        sudo packer build -only ${{ inputs.build }} "$GITHUB_WORKSPACE/packer/"
      working-directory: packer/plugins/packer-builder-arm
      shell: bash

    - name: Extract drivers from image
      run: |
        mv *.tar.gz $RUNNER_TEMP
        cd $RUNNER_TEMP

        # Extract 32bit drivers
        tar --extract --file=PSPi6.Drivers_32bit.tar.gz ./packer/drivers/bin
        mv ./packer/drivers/bin ./packer/drivers/bin_32
        for i in $(ls ./packer/drivers/bin_32)
        do
          mv "./packer/drivers/bin_32/$i" "./packer/drivers/bin_32/${i}_32"
        done
        zip drivers_32bit.zip ./packer/drivers/bin_32/* -r

        # Extract 64bit drivers
        tar --extract --file=PSPi6.Drivers_64bit.tar.gz ./packer/drivers/bin
        mv ./packer/drivers/bin ./packer/drivers/bin_64
        for i in $(ls ./packer/drivers/bin_64)
        do
          mv "./packer/drivers/bin_64/$i" "./packer/drivers/bin_64/${i}_64"
        done
        zip drivers_64bit.zip ./packer/drivers/bin_64/* -r
      working-directory: packer/plugins/packer-builder-arm
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: drivers_32bit
        path: ${{ runner.temp }}/packer/drivers/bin_32/
        if-no-files-found: error

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: drivers_64bit
        path: ${{ runner.temp }}/packer/drivers/bin_64/
        if-no-files-found: error

    # Create github release
    - name: Create Release
      if: ${{ inputs.createRelease }} == 'true'
      uses: softprops/action-gh-release@v0.1.15
      with:
        generate_release_notes: true
        tag_name: v${{ steps.gitversion.outputs.majorMinorPatch }}
        name: Release v${{ steps.gitversion.outputs.majorMinorPatch }}
        draft: true
        fail_on_unmatched_files: true
        files: |
          packer/plugins/packer-builder-arm/drivers_*.zip