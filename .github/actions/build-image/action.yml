name: Build Packer Image
description: 'Build PSPi image'
inputs:
  build:
    description: 'Comma separated list of images to build'
    required: true
  skipRelease:
    description: 'Skip creating a release'
    default: 'false'
  AZCOPY_TENANT_ID:
    description: 'Azure Tenant ID'
    required: true
  AZCOPY_SPA_CLIENT_SECRET:
    description: 'Azure Service Principal Client Secret'
    required: true
  AZCOPY_SPA_APPLICATION_ID:
    description: 'Azure Service Principal Application ID'
    required: true
  
runs:
  using: "composite"
  steps:
    # Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    # Download 32 bit driver artifact
    - name: Download 32bit Drivers
      uses: actions/download-artifact@v4
      with:
        name: drivers_32bit
        path: rpi/drivers/bin

    # Rename driver files to include _32
    - name: Rename 32bit driver files
      run: |
        for i in $(ls)
        do
          mv $i $i_32
        done
        ls
      working-directory: rpi/drivers/bin
      shell: bash
      
    # Download 64 bit driver artifact
    - name: Download 64bit Drivers
      uses: actions/download-artifact@v4
      with:
        name: drivers_64bit
        path: rpi/drivers/bin

    # Rename driver files to include _64
    - name: Rename 64bit driver files
      run: |
        for i in $(ls)
        do
          mv $i $i_64
        done
        ls
      working-directory: rpi/drivers/bin
      shell: bash

    # Login to az, this step isn't necessary here but it will fail the workflow early if there's issues with the service principal
    - name: Login with azcopy
      run: |
        export AZCOPY_AUTO_LOGIN_TYPE=SPN
        export AZCOPY_SPA_APPLICATION_ID=${{ inputs.AZCOPY_SPA_APPLICATION_ID }}
        export AZCOPY_SPA_CLIENT_SECRET=${{ inputs.AZCOPY_SPA_CLIENT_SECRET }}
        export AZCOPY_TENANT_ID=${{ inputs.AZCOPY_TENANT_ID }}
        az login --service-principal -u ${{ inputs.AZCOPY_SPA_APPLICATION_ID }} -p ${{ inputs.AZCOPY_SPA_CLIENT_SECRET }} --tenant ${{ inputs.AZCOPY_TENANT_ID }}

        azcopy list "https://stpspiproduseast001.blob.core.windows.net/pspi6/"
      shell: bash

    # Install GitVersion
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    # Determine version
    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0      

    # Install dependencies for packer
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install fdisk gdisk qemu-user-static libarchive-tools tar parted qemu-utils
      shell: bash

    # Install packer arm plugin
    - name: Install packer-builder-arm
      run: |
        mkdir -p $GITHUB_WORKSPACE/packer/plugins
        cd $GITHUB_WORKSPACE/packer/plugins
        git clone https://github.com/mkaczanowski/packer-builder-arm
        cd packer-builder-arm
        go mod download
        go build -v .
      shell: bash

    # Build images
    - name: Build images
      run: |
        sudo packer build -only ${{ inputs.build }} -var pspi_version=v${{ steps.gitversion.outputs.majorMinorPatch }} "$GITHUB_WORKSPACE/packer/"
      working-directory: packer/plugins/packer-builder-arm
      shell: bash

    # Shrink images
    - name: Shrink images
      run: |
        wget https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh
        chmod +x pishrink.sh
        for i in $(ls *.img)
        do
          sudo ./pishrink.sh -v -Z -a "$i"
        done
      working-directory: packer/plugins/packer-builder-arm
      shell: bash

    # Generate sha256 filehash of image files
    - name: Generate sha256 filehash
      run: |
        for i in $(ls *.img.xz)
        do
          sha256sum "$i" | awk '{print $1}' > "$i.sha256"
        done
      working-directory: packer/plugins/packer-builder-arm
      shell: bash

    # Upload files to azure storage account
    - name: Upload files to storage account
      run: |
        export AZCOPY_AUTO_LOGIN_TYPE=SPN
        export AZCOPY_SPA_APPLICATION_ID=${{ inputs.AZCOPY_SPA_APPLICATION_ID }}
        export AZCOPY_SPA_CLIENT_SECRET=${{ inputs.AZCOPY_SPA_CLIENT_SECRET }}
        export AZCOPY_TENANT_ID=${{ inputs.AZCOPY_TENANT_ID }}
        az login --service-principal -u ${{ inputs.AZCOPY_SPA_APPLICATION_ID }} -p ${{ inputs.AZCOPY_SPA_CLIENT_SECRET }} --tenant ${{ inputs.AZCOPY_TENANT_ID }}

        for i in $(ls *.img.xz)
        do
          azcopy copy "$i" "https://stpspiproduseast001.blob.core.windows.net/pspi6/$i"
        done

        for i in $(ls *.img.xz.sha256)
        do
          azcopy copy "$i" "https://stpspiproduseast001.blob.core.windows.net/pspi6/$i"
        done

        echo "skipRelease is ${{ inputs.skipRelease }}"
      working-directory: packer/plugins/packer-builder-arm
      shell: bash

    # Create github release
    - name: Create Release
      if: ${{ inputs.skipRelease }} == 'false'
      uses: softprops/action-gh-release@v0.1.15
      with:
        generate_release_notes: true
        tag_name: v${{ steps.gitversion.outputs.majorMinorPatch }}
        name: Release v${{ steps.gitversion.outputs.majorMinorPatch }}
        draft: true
        fail_on_unmatched_files: true
        files: |
          packer/plugins/packer-builder-arm/*.img.xz
          packer/plugins/packer-builder-arm/*.img.xz.sha256

      

      